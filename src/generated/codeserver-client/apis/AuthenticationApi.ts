/* tslint:disable */
/* eslint-disable */
/**
 * CodeServer REST API
 * CodeServer REST API v3.0
 *
 * The version of the OpenAPI document: 3.0
 * Contact: codeserver-support@elisa.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AuthenticationRequest,
    AuthenticationRequestFromJSON,
    AuthenticationRequestToJSON,
    AuthenticationResponse,
    AuthenticationResponseFromJSON,
    AuthenticationResponseToJSON,
} from '../models';

export interface AuthenticateRequest {
    authenticationRequest?: AuthenticationRequest;
}

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI {

    /**
     * Authenticate with given user/password information and, after successfull authentication, get reply with access token to be used in Authorization header with other CS REST API requests. With GET request the authentication is optional (guest user is the default) and with POST, PUT and PATCH requests the authentication is mandatory.
     * Authenticate and get authentication token.
     */
    async authenticateRaw(requestParameters: AuthenticateRequest): Promise<runtime.ApiResponse<AuthenticationResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/auth/api-login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthenticationRequestToJSON(requestParameters.authenticationRequest),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticationResponseFromJSON(jsonValue));
    }

    /**
     * Authenticate with given user/password information and, after successfull authentication, get reply with access token to be used in Authorization header with other CS REST API requests. With GET request the authentication is optional (guest user is the default) and with POST, PUT and PATCH requests the authentication is mandatory.
     * Authenticate and get authentication token.
     */
    async authenticate(requestParameters: AuthenticateRequest): Promise<AuthenticationResponse> {
        const response = await this.authenticateRaw(requestParameters);
        return await response.value();
    }

}
