/* tslint:disable */
/* eslint-disable */
/**
 * CodeServer REST API
 * CodeServer REST API v3.0
 *
 * The version of the OpenAPI document: 3.0
 * Contact: codeserver-support@elisa.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Attribute,
    AttributeFromJSON,
    AttributeFromJSONTyped,
    AttributeToJSON,
    PriceStatus,
    PriceStatusFromJSON,
    PriceStatusFromJSONTyped,
    PriceStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface Price
 */
export interface Price {
    /**
     * Price list name.
     * @type {string}
     * @memberof Price
     */
    pricelistName?: string;
    /**
     * Price identifier = OID.
     * @type {string}
     * @memberof Price
     */
    priceId?: string;
    /**
     * Price of product
     * @type {string}
     * @memberof Price
     */
    price1?: string;
    /**
     * 
     * @type {PriceStatus}
     * @memberof Price
     */
    status?: PriceStatus;
    /**
     * Validity beginning date without time part.
     * @type {Date}
     * @memberof Price
     */
    beginDate?: Date;
    /**
     * Validity expiration date without time part.
     * @type {Date}
     * @memberof Price
     */
    expirationDate?: Date;
    /**
     * Last modified date and time.
     * @type {Date}
     * @memberof Price
     */
    lastModifiedDate?: Date;
    /**
     * Name of last modifier.
     * @type {string}
     * @memberof Price
     */
    lastModifiedBy?: string;
    /**
     * Creation date and time.
     * @type {Date}
     * @memberof Price
     */
    createDate?: Date;
    /**
     * Price attributes
     * @type {Array<Attribute>}
     * @memberof Price
     */
    attributes?: Array<Attribute>;
}

export function PriceFromJSON(json: any): Price {
    return PriceFromJSONTyped(json, false);
}

export function PriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Price {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pricelistName': !exists(json, 'pricelistName') ? undefined : json['pricelistName'],
        'priceId': !exists(json, 'priceId') ? undefined : json['priceId'],
        'price1': !exists(json, 'price1') ? undefined : json['price1'],
        'status': !exists(json, 'status') ? undefined : PriceStatusFromJSON(json['status']),
        'beginDate': !exists(json, 'beginDate') ? undefined : (new Date(json['beginDate'])),
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (new Date(json['expirationDate'])),
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : (new Date(json['lastModifiedDate'])),
        'lastModifiedBy': !exists(json, 'lastModifiedBy') ? undefined : json['lastModifiedBy'],
        'createDate': !exists(json, 'createDate') ? undefined : (new Date(json['createDate'])),
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(AttributeFromJSON)),
    };
}

export function PriceToJSON(value?: Price | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pricelistName': value.pricelistName,
        'priceId': value.priceId,
        'price1': value.price1,
        'status': PriceStatusToJSON(value.status),
        'beginDate': value.beginDate === undefined ? undefined : (value.beginDate.toISOString().substr(0,10)),
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate.toISOString().substr(0,10)),
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : (value.lastModifiedDate.toISOString()),
        'lastModifiedBy': value.lastModifiedBy,
        'createDate': value.createDate === undefined ? undefined : (value.createDate.toISOString()),
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(AttributeToJSON)),
    };
}


