/* tslint:disable */
/* eslint-disable */
/**
 * CodeServer REST API
 * CodeServer REST API v3.0
 *
 * The version of the OpenAPI document: 3.0
 * Contact: codeserver-support@elisa.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Field,
    FieldFromJSON,
    FieldFromJSONTyped,
    FieldToJSON,
} from './';

/**
 * CodeServer price list metadata
 * @export
 * @interface PriceList
 */
export interface PriceList {
    /**
     * Price list friendly name
     * @type {string}
     * @memberof PriceList
     */
    pricelistName: string;
    /**
     * Product classification id
     * @type {string}
     * @memberof PriceList
     */
    productClassificationId: string;
    /**
     * Product classification name
     * @type {string}
     * @memberof PriceList
     */
    productClassificationName: string;
    /**
     * Product version id
     * @type {string}
     * @memberof PriceList
     */
    productVersionId: string;
    /**
     * Product version name
     * @type {string}
     * @memberof PriceList
     */
    productVersionName: string;
    /**
     * Producers friendly name
     * @type {string}
     * @memberof PriceList
     */
    producersName?: string;
    /**
     * Producer classification id
     * @type {string}
     * @memberof PriceList
     */
    producerClassificationId?: string;
    /**
     * Producer classification name
     * @type {string}
     * @memberof PriceList
     */
    producerClasificationName?: string;
    /**
     * Producer version id
     * @type {string}
     * @memberof PriceList
     */
    producerVersionId?: string;
    /**
     * Producer version name
     * @type {string}
     * @memberof PriceList
     */
    producerVersionName?: string;
    /**
     * Customers friendly name
     * @type {string}
     * @memberof PriceList
     */
    customersName?: string;
    /**
     * Customer classification id
     * @type {string}
     * @memberof PriceList
     */
    customerClassificationId?: string;
    /**
     * Customer classification name
     * @type {string}
     * @memberof PriceList
     */
    customerClassificationName?: string;
    /**
     * Customer version id
     * @type {string}
     * @memberof PriceList
     */
    customerVersionId?: string;
    /**
     * Customer version name
     * @type {string}
     * @memberof PriceList
     */
    customerVersionName?: string;
    /**
     * Fields of price
     * @type {Array<Field>}
     * @memberof PriceList
     */
    definitions: Array<Field>;
}

export function PriceListFromJSON(json: any): PriceList {
    return PriceListFromJSONTyped(json, false);
}

export function PriceListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pricelistName': json['pricelistName'],
        'productClassificationId': json['productClassificationId'],
        'productClassificationName': json['productClassificationName'],
        'productVersionId': json['productVersionId'],
        'productVersionName': json['productVersionName'],
        'producersName': !exists(json, 'producersName') ? undefined : json['producersName'],
        'producerClassificationId': !exists(json, 'producerClassificationId') ? undefined : json['producerClassificationId'],
        'producerClasificationName': !exists(json, 'producerClasificationName') ? undefined : json['producerClasificationName'],
        'producerVersionId': !exists(json, 'producerVersionId') ? undefined : json['producerVersionId'],
        'producerVersionName': !exists(json, 'producerVersionName') ? undefined : json['producerVersionName'],
        'customersName': !exists(json, 'customersName') ? undefined : json['customersName'],
        'customerClassificationId': !exists(json, 'customerClassificationId') ? undefined : json['customerClassificationId'],
        'customerClassificationName': !exists(json, 'customerClassificationName') ? undefined : json['customerClassificationName'],
        'customerVersionId': !exists(json, 'customerVersionId') ? undefined : json['customerVersionId'],
        'customerVersionName': !exists(json, 'customerVersionName') ? undefined : json['customerVersionName'],
        'definitions': ((json['definitions'] as Array<any>).map(FieldFromJSON)),
    };
}

export function PriceListToJSON(value?: PriceList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pricelistName': value.pricelistName,
        'productClassificationId': value.productClassificationId,
        'productClassificationName': value.productClassificationName,
        'productVersionId': value.productVersionId,
        'productVersionName': value.productVersionName,
        'producersName': value.producersName,
        'producerClassificationId': value.producerClassificationId,
        'producerClasificationName': value.producerClasificationName,
        'producerVersionId': value.producerVersionId,
        'producerVersionName': value.producerVersionName,
        'customersName': value.customersName,
        'customerClassificationId': value.customerClassificationId,
        'customerClassificationName': value.customerClassificationName,
        'customerVersionId': value.customerVersionId,
        'customerVersionName': value.customerVersionName,
        'definitions': ((value.definitions as Array<any>).map(FieldToJSON)),
    };
}


