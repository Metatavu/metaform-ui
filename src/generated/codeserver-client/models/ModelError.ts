/* tslint:disable */
/* eslint-disable */
/**
 * CodeServer REST API
 * CodeServer REST API v3.0
 *
 * The version of the OpenAPI document: 3.0
 * Contact: codeserver-support@elisa.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ErrorDetail,
    ErrorDetailFromJSON,
    ErrorDetailFromJSONTyped,
    ErrorDetailToJSON,
} from './';

/**
 * Error/warning description
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * Human readable, unique name of the error.
     * @type {string}
     * @memberof ModelError
     */
    name: string;
    /**
     * Internal identifier used for correlation purposes.
     * @type {string}
     * @memberof ModelError
     */
    debugId?: string;
    /**
     * Message describing the error.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details for the error. Mandatory for client side 4xx errors.
     * @type {Array<ErrorDetail>}
     * @memberof ModelError
     */
    details?: Array<ErrorDetail>;
}

export function ModelErrorFromJSON(json: any): ModelError {
    return ModelErrorFromJSONTyped(json, false);
}

export function ModelErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'debugId': !exists(json, 'debug_id') ? undefined : json['debug_id'],
        'message': json['message'],
        'details': !exists(json, 'details') ? undefined : ((json['details'] as Array<any>).map(ErrorDetailFromJSON)),
    };
}

export function ModelErrorToJSON(value?: ModelError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'debug_id': value.debugId,
        'message': value.message,
        'details': value.details === undefined ? undefined : ((value.details as Array<any>).map(ErrorDetailToJSON)),
    };
}


